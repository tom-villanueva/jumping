version: "3"
services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # - ./backend:/var/www/html
      - ./storage_public:/var/www/html/storage/app/public/
      - ./storage_logs:/var/www/html/storage/logs
    env_file:
      - ./backend/.env
    environment:
      PHP_OPCACHE_ENABLE: 1
    networks:
      - app-network
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nextjs_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./backend:/var/www/html
      - ./storage_public:/var/www/html/storage/app/public
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./certbot/www/:/var/www/certbot/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  # storage_logs:
